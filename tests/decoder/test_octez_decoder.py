from collections import OrderedDict

import pytest

from bridge_indexer.types.output_proof.output_proof import OutputProofData


@pytest.fixture()
def output_proof() -> bytes:
    return bytes.fromhex(
        '030002bdd2b82ac98eed90fabd96435bcf18c06757e1a5f301d3ed71ae87793018ebe1bdd2b82ac98eed90fabd96435bcf18c06757e1a5f301d3ed71ae87793018ebe10005820764757261626c65d06026cacc9267161bf35c4f5821a92f5ba11117617236cf093a511101b662d62603746167c00800000004536f6d650003c08c1263e05e83a0b7747be02438ed489651857ad070f504528775ce68f7be7b45820576616c7565810370766d8107627566666572738205696e707574820468656164c00100066c656e677468c00100066f75747075740004820132810a6c6173745f6c6576656cc00400331e4a0133810f76616c69646974795f706572696f64c0040003b10082013181086f7574626f786573020002ff5fc07a7996a5f0157d61acef12a3fa9c283044f2ea5393efd05a61e246da4cba58ea02000181bac0477ea5fd14ef0ee6ffb7cda65072b5fdb875093996acaebf53128c7af8044df701c164016090013084011827010bebc05b8557827c0862b13f3f29795a24d9bbc4c65bd20d6e54a3e0a8c50d322e38640105d6c01537734edc0e70681a6204e93ac4775e5612e21e5a766b78e7d516313e5e04f30102efc0014f892c50a6e4cb2a87d9c37678214759adb5067526ab7f8781d6b21572639f010170c0fb134c3458d3ad70cd2ae7a044e9adbf46fcc14c244112614132dbb621db66da00b40062002d0019c06f538ea1e18ad75053ad5850f8fb9201034e7b739757fcb08f2223692114cf36000fc0c8ecf8a40406b740beafcb6fa1f53e4833ba2e2dfdd70ce0fa0ba41ea4d6f1d10005c00db6b8721204b987b18053180e4363cd73967d6b02ea32e037d7acd37ec1b463820733313739373436820468656164c00100066c656e677468c0010007333334313633320003810468656164c001008208636f6e74656e7473810130c0a10000009d000000009807070017070707070a0000001601bf7b43fce415f088aefcc9f4155c43f7cb6aad9900070707070000030600b92e0707009e9f91800d07070a000000160000305787265d350779d6742436f117a9fab216227a07070a0000000405009a2e0a000000147e6f6ccfe485a087f0f819eabfdbfb1a49b9767701141a7291416959223a88ab14bdf41f8c3346663c000000000764656661756c74066c656e677468c00101c039b803bc40eaa2a3236f24cf52a8c6b518cf40da16b1558973b7b1b98c627f2dc0abc5b09bf3850f117bcb1d7fcaa7dc2315a7fdb5ecc9efeb58a9ff81385b4c2bc0f65d2d280ed4eade9462ba7be3dfb68b53a6f6746112b8c58765ad239fe630c8c02c4f837c4f64409807aa20178b68a98f658795e22d256e2afc12de6f58ad6614c0f593074cb62f3b720d8f62378b15e2edcb194b838c136a5b516931a4bcc3875ec0834b8ad1d25376d202dc56fb405801791716f7589b9f0631cd2db55fc87e1a5dc019f17060bbd56a68c18d6bdff206de5d94946f72c4f905c401a7d6dfc943ebe00134810d6d6573736167655f6c696d6974c002a401047761736dd0c745891fcd269f1121e586486c4dbbb36c0a10fcb2a2888db0f665d7d2b3950f0032fd4000000000009807070017070707070a0000001601bf7b43fce415f088aefcc9f4155c43f7cb6aad9900070707070000030600b92e0707009e9f91800d07070a000000160000305787265d350779d6742436f117a9fab216227a07070a0000000405009a2e0a000000147e6f6ccfe485a087f0f819eabfdbfb1a49b9767701141a7291416959223a88ab14bdf41f8c3346663c000000000764656661756c74'
    )


class TestOctezDecoder:
    # @pytest.mark.skip
    def test_output_proof_schema_version(self, output_proof: bytes):
        decoded, _ = OutputProofData(output_proof).unpack()
        assert isinstance(decoded, OrderedDict)
        assert len(decoded) == 2
        with pytest.raises(AssertionError):
            assert len(decoded) == 3, 'Valid output_proof schema version should contain only 2 keys'
        assert len(decoded['output_proof']) == 5
        assert len(decoded['output_proof_output']) == 3

        assert 'output_proof' in decoded
        assert 'output_proof_output' in decoded

        assert len(bytes.fromhex(decoded['output_proof']['Before'][2:])) == 32
        assert len(bytes.fromhex(decoded['output_proof']['After'][2:])) == 32
