import pytest

from bridge_indexer.types.output_proof.output_proof import OutputProofData


@pytest.fixture()
def output_proof() -> bytes:
    return bytes.fromhex(
        '030002fe5a4d1c15691eaa1625d70d6ea29432f16d0f3630e006ff51bf1980a7a248dafe5a4d1c15691eaa1625d70d6ea29432f16d0f3630e006ff51bf1980a7a248da0005820764757261626c65d06ab14332668a66a1e546c8c8f4b05fc0712d01a357aa0fd6ab8f748ccf41f88e03746167c00800000004536f6d650003c044a02c7d251e1e8234cf496ba37fa343e2b1406321f0e5c5c1dea411753481b5820576616c7565810370766d8107627566666572738205696e707574820468656164c00100066c656e677468c00100066f75747075740004820132810a6c6173745f6c6576656cc004002b45e70133810f76616c69646974795f706572696f64c00400013b0082013181086f7574626f786573010b54c09398dc3a36917bfbd76c66bf959e0b175aac3c83fe1e18f82c36effd1b7c8c790105cbc093f5a5f9a38e0cef39ef997a07e97ad56857d3d348f61b1f3a767f59eebf0b290102e3c0df2321b36d8003edab50ddffab4991eb94c0db6e8c629eb215c3b051e081acd701016ec0faf068b39020f643505cb15841d598f8639e235f30cb60086c7fdf2430ed012500ba0058c0b372740bb5327281c8cefbd4811807479ac95dead6769c495dfc60c87f7707ed00300017c0c4fab792e58720c45a4737a530d2eb984f8b8d8f09d1b2aa442c2046462253bf0009c0c8b6224279bf9364d594a3823017b221d5cc12517fd2e56b2a088b3574fc191300060003e00003c07cd4b7ebce1eb9daaa8b9e5a94e477a68911e39c704621715bbb15f1594b9c4d820732383334303537820468656164c00100066c656e677468c0010007323833353933390003810468656164c001008208636f6e74656e7473810130c0d3000000cf00000000ca07070a0000001600000ff91d3da1fbeb517f3013deb5f53ceb3c79b2ec07070a0000001601a6938a03cf1d7652a7b871bd9c7c36b4655fa8030007070707000005090a0000005f05020000005907040100000010636f6e74726163745f616464726573730a0000001c050a000000160155275f943ba305902a52dbf648236db528e0f015000704010000000a746f6b656e5f747970650a0000000b0501000000054641312e32000701a6938a03cf1d7652a7b871bd9c7c36b4655fa80300000000087769746864726177066c656e677468c00101c0c92ad1b14240d5bf885e446ed172269bf883484bea59b61804fdf834bf509e89c0522b9c355b55d8d1812dbf6e7bd478394fcbeec4c952aa7cf7e8922f41fe13c1c070757e7d1a45bbbde1c171d11a3c7ded59374ae8c0d116022895527f59bd362c0134810d6d6573736167655f6c696d6974c002a401047761736dd0cce1cc8a4a9ac0b9e9597a9dff613c88bb75b1df89f5ebcc756f47f1bb8c0625fe5a4d1c15691eaa1625d70d6ea29432f16d0f3630e006ff51bf1980a7a248da002b45e30000000000ca07070a0000001600000ff91d3da1fbeb517f3013deb5f53ceb3c79b2ec07070a0000001601a6938a03cf1d7652a7b871bd9c7c36b4655fa8030007070707000005090a0000005f05020000005907040100000010636f6e74726163745f616464726573730a0000001c050a000000160155275f943ba305902a52dbf648236db528e0f015000704010000000a746f6b656e5f747970650a0000000b0501000000054641312e32000701a6938a03cf1d7652a7b871bd9c7c36b4655fa80300000000087769746864726177'
    )


@pytest.fixture()
def output_proof_with_batch() -> bytes:
    return bytes.fromhex(
        '030002fe5a4d1c15691eaa1625d70d6ea29432f16d0f3630e006ff51bf1980a7a248dafe5a4d1c15691eaa1625d70d6ea29432f16d0f3630e006ff51bf1980a7a248da0005820764757261626c65d06ab14332668a66a1e546c8c8f4b05fc0712d01a357aa0fd6ab8f748ccf41f88e03746167c00800000004536f6d650003c044a02c7d251e1e8234cf496ba37fa343e2b1406321f0e5c5c1dea411753481b5820576616c7565810370766d8107627566666572738205696e707574820468656164c00100066c656e677468c00100066f75747075740004820132810a6c6173745f6c6576656cc004002b45e70133810f76616c69646974795f706572696f64c00400013b0082013181086f7574626f786573010b54c09398dc3a36917bfbd76c66bf959e0b175aac3c83fe1e18f82c36effd1b7c8c790105cbc093f5a5f9a38e0cef39ef997a07e97ad56857d3d348f61b1f3a767f59eebf0b290102e3c0df2321b36d8003edab50ddffab4991eb94c0db6e8c629eb215c3b051e081acd701016ec0faf068b39020f643505cb15841d598f8639e235f30cb60086c7fdf2430ed012500ba0058c0b372740bb5327281c8cefbd4811807479ac95dead6769c495dfc60c87f7707ed00300017c0c4fab792e58720c45a4737a530d2eb984f8b8d8f09d1b2aa442c2046462253bf0009c0c8b6224279bf9364d594a3823017b221d5cc12517fd2e56b2a088b3574fc191300060003e00003c07cd4b7ebce1eb9daaa8b9e5a94e477a68911e39c704621715bbb15f1594b9c4d820732383334303537820468656164c00100066c656e677468c0010007323833353933390003810468656164c001008208636f6e74656e7473810130c0d3000000cf00000000ca07070a0000001600000ff91d3da1fbeb517f3013deb5f53ceb3c79b2ec07070a0000001601a6938a03cf1d7652a7b871bd9c7c36b4655fa8030007070707000005090a0000005f05020000005907040100000010636f6e74726163745f616464726573730a0000001c050a000000160155275f943ba305902a52dbf648236db528e0f015000704010000000a746f6b656e5f747970650a0000000b0501000000054641312e32000701a6938a03cf1d7652a7b871bd9c7c36b4655fa80300000000087769746864726177066c656e677468c00101c0c92ad1b14240d5bf885e446ed172269bf883484bea59b61804fdf834bf509e89c0522b9c355b55d8d1812dbf6e7bd478394fcbeec4c952aa7cf7e8922f41fe13c1c070757e7d1a45bbbde1c171d11a3c7ded59374ae8c0d116022895527f59bd362c0134810d6d6573736167655f6c696d6974c002a401047761736dd0cce1cc8a4a9ac0b9e9597a9dff613c88bb75b1df89f5ebcc756f47f1bb8c0625fe5a4d1c15691eaa1625d70d6ea29432f16d0f3630e006ff51bf1980a7a248da002b45e30000000000ca07070a0000001600000ff91d3da1fbeb517f3013deb5f53ceb3c79b2ec07070a0000001601a6938a03cf1d7652a7b871bd9c7c36b4655fa8030007070707000005090a0000005f05020000005907040100000010636f6e74726163745f616464726573730a0000001c050a000000160155275f943ba305902a52dbf648236db528e0f015000704010000000a746f6b656e5f747970650a0000000b0501000000054641312e32000701a6938a03cf1d7652a7b871bd9c7c36b4655fa80300000000087769746864726177'
    )


@pytest.fixture()
def proof() -> bytes:
    return bytes.fromhex(
        '030002dd4925655b4df64a0b212e6db02a9d698713a0308da4cde63f7b88c2d7392799dd4925655b4df64a0b212e6db02a9d698713a0308da4cde63f7b88c2d73927990005820764757261626c65d0281665ccd37d4231924618e274d5e9105cfd4f43dfebb9134580b7738d35314403746167c00800000004536f6d650003c0621aa0e1bed9c34b8241318a8754944c5a30b8ec96c4a8c55e65653f2a335e88820576616c7565810370766d8107627566666572738205696e707574820468656164c00100066c656e677468c00100066f75747075740004820132810a6c6173745f6c6576656cc004002c42a30133810f76616c69646974795f706572696f64c00400013b0082013181086f7574626f78657302000108100183f901420bc0ea5f1c6623172d65a45665f19de183c1063b02e170b4d0f6ec4d1fe20472fbf20120c901101901081ac0993678b9969039c49d35c92fab85e2d7e4097457db43dbcbb966a4d2ee8820bb010405c0423395f255adcadf74f744401260794804b5803a35710c60bd11e0e39b0362070101fdc0e52665e6d430b0e9ed36521e8efc6d4ed6ddb86a1b6ccc1b100858d1b524a97d00ffc09875e58c0dc98209a26e7cc85e9dc8229ba3b2fbd4027c2a4aa57beaa5dce8d10079c0f7b9d3e968940f59ea87788efdce3a5137a2a5e8e61528f9701f586c3388ce590037c0d10416c1a10cfdaa09b3dd5e0aeae487049e115cd79ad609b74515315c972c51001fc0ccc9a97b19ed30b505589c09b06af0bf1dae7d74a0a8cd9b5d3615122b5a1a3d0011c0a742812fa752489fbb7483e3f0ba8a935d24d727938fe3d7a4c6959bf87d19950009c068111503abe35ba26379c28abb01b51fb0238dba7af2315fcb0891b14b9545890003c0fc8460e8d18726b65c66b1d7576a2f4942f807d28b6fd7b78f7b87004c4cc7e78107323833383139330003810468656164c001008208636f6e74656e7473810130c0d3000000cf00000000ca07070a0000001600000ff91d3da1fbeb517f3013deb5f53ceb3c79b2ec07070a0000001601a6938a03cf1d7652a7b871bd9c7c36b4655fa8030007070707000005090a0000005f05020000005907040100000010636f6e74726163745f616464726573730a0000001c050a000000160155275f943ba305902a52dbf648236db528e0f015000704010000000a746f6b656e5f747970650a0000000b0501000000054641312e32000101a6938a03cf1d7652a7b871bd9c7c36b4655fa80300000000087769746864726177066c656e677468c00101c0c526c547ea5ea1478ad94d802c5904b38c67fd5adf59e294c48ef765bce8d54cc03062045a27988eccde12f3e227b2f0530df4e4911222b4b92f5a9924af19e638c01727af2c9d1b3ab308a932059d34d0c36f2fd502a2eab2822d8399392e346c57c0ed06fba472e4c75c480d81a3aee843c7d09bf22b0f919ebf7954e870e777abaf0134810d6d6573736167655f6c696d6974c002a401047761736dd0ea2db8f3491707d4608b900d03a3e8a335d703258ad67cf42553b7da64119b27dd4925655b4df64a0b212e6db02a9d698713a0308da4cde63f7b88c2d7392799002b4eb10000000000ca07070a0000001600000ff91d3da1fbeb517f3013deb5f53ceb3c79b2ec07070a0000001601a6938a03cf1d7652a7b871bd9c7c36b4655fa8030007070707000005090a0000005f05020000005907040100000010636f6e74726163745f616464726573730a0000001c050a000000160155275f943ba305902a52dbf648236db528e0f015000704010000000a746f6b656e5f747970650a0000000b0501000000054641312e32000101a6938a03cf1d7652a7b871bd9c7c36b4655fa80300000000087769746864726177'
    )


class TestOctezDecoder:
    @pytest.mark.skip
    def test_output_proof_schema_version(self, output_proof: bytes):
        decoded, _ = OutputProofData(output_proof).unpack()
        assert len(decoded) == 3
        with pytest.raises(AssertionError):
            assert len(decoded) == 2
        assert 'output_proof_state' in decoded
        assert len(bytes.fromhex(decoded['output_proof_state'][2:])) == 32
